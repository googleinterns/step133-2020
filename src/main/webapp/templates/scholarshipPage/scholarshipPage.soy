{namespace example.templates.scholarshipPage}
{template .scholarshipPage}
  {@param scholarship: [introduction: [scholarshipName: string,  
                                       schoolsList:list<string>,
                                       introduction: string,
                                       URL: uri],
                        requirements: [academicRequirements: list<string>,
                                       ethnicityRaceRequirements: list<string>,
                                       financialRequirements: list<string>,
                                       genderRequirements: list<string>,
                                       locationRequirements: list<string>,
                                       nationalOriginRequirements: list<string>,
                                       otherRequirements: list<string>],
                        applicationNotes: [isRenewable: bool,
                                           amountPerYear: string,
                                           applicationProcess: string,
                                           numberOfYears: int]
                        ]}
  {call .scholarshipIntroduction}
    {param introduction: $scholarship.introduction /}
  {/call}
  {call .scholarshipRequirements}
    {param requirements: $scholarship.requirements /}
  {/call}
  {call .scholarshipApplication}
    {param applicationNotes: $scholarship.applicationNotes /}
  {/call}
{/template}

{template .scholarshipIntroduction}
  {@param introduction: [scholarshipName: string,  
                         schoolsList:list<string>,
                         introduction: string,
                         URL: uri]}
  <div id="scholarship-name">
    <p>{$introduction.scholarshipName}</p>
    <a href={$introduction.URL}>Visit official website</a>
  </div>
  <div id="schools">
    {call .joinedList}
      {param stringList: introduction.schoolsList /}
    {/call}
  </div>
  <div id="introduction">
    <p>{$introduction.introduction}</p>
  </div>
{/template}

{template .scholarshipRequirements}
  {@param requirements: [academicRequirements: list<string>, 
                         financialRequirements: list<string>,
                         ethnicityRaceRequirements: list<string>,
                         genderRequirements: list<string>,
                         locationRequirements: list<string>,
                         nationalOriginRequirements: list<string>,
                         otherRequirements: list<string>]}
  {for $key in keys($requirements)}
    <p> {$key} : 
    {call .joinedList} 
      {param stringList: $requirements.{$key} /}
    {/call}
    </p>
  {/for} 
{/template}

{template .scholarshipApplication}
  {@param applicationNotes : [isRenewable: bool,
                              amountPerYear: string,
                              applicationProcess: string,
                              numberOfYears: int]}
  <div id="amount-and-duration">
    <p> Amount per year: {$applicationNotes.amountPerYear}</p>
    <p> Duration: $applicationNotes.numberOfYears 
        {$applicationNotes.numberOfYears > 1 ? years : year} 
    </p>
  </div>
  <div id="application-process">
    <p> Application process: {$applicationNotes.applicationProcess} </p>
  </div>
  <div id="is-renewable">
    <p>Renewable: {$applicationNotes.isRenewable}</p>
  </div>
{/template}

{template .joinedList}
  {@param stringList: list<string>}
    <p>
    {for $str in $stringList}
      {$str}{if not isLast($str)}, {/if}
    {/for}
    </p>
{/template}